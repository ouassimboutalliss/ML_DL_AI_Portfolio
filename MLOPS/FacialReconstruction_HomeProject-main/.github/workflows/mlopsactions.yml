# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: 'Set up python!'
        uses: actions/setup-python@v2
        with: 
          python-version: 3.8

      #
      #
      # - name: "install requirements"
      #   run: |
      #    python -m pip install --upgrade pip
      #    python -m pip install -r api/requirements.txt

      - name: "Azure login"
        uses: azure/login@v1 
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

          

      # - name: "run script"
      #   working-directory: api/app
      #   run: | 
      #
      #   python main.py

      - name: "save config data"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: config-data
          path: tmp/data
          retention-days: 30
      

      # Build and run .-> staat voor 2de lijn
      - name: Build and run Docker file
        run: |
            docker build -t ghcr.io/ouassimboutalliss/facialreconstruction_homeproject:v2 -f api/Dockerfile .
            docker push ghcr.io/ouassimboutalliss/facialreconstruction_homeproject:v2
            
       
       
      
  # docker build -t ghcr.io/ouassimboutalliss/facialreconstruction_homeproject:v2 -f api/Dockerfile .
  #        docker run --env-file api/.env -d -p 5000:80 ghcr.io/ouassimboutalliss/facialreconstruction_homeproject:v2 
     # test the docker container
      - name: Test docker container
        run: |
          curl localhost:5000


     #kube
      - name: kubectl test deployments
        run: |
          kubectl get deployments --namespace=mlops_project_facial_oqn
      
         # test the kubernetes container
      - name: Test kubernetes container
        run: |
          curl localhost:30019


    
        


